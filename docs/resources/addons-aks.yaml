---
# When deploying on Azure AKS, set ingress-azure.enabled to true to install the application-gateway-ingress-controller.
ingress-azure:
  enabled: true
  # Add required details about the Application Gateway you created.
  appgw:
    # Subscription ID of your Azure subscription.
    subscriptionId: <YOUR.SUBSCRIPTION_ID>
    # Resource group in which you created the Application Gateway.
    resourceGroup: <RESOURCE_GROUP_NAME>
    # Name of the Application Gateway you created.
    name: <APPLICATION_GATEWAY_NAME>
    # To restrict all Ingresses to be exposed over a private IP address.
    usePrivateIP: true
  # Authentication using which ingress controller authenticates with Azure Resource Manager.
  armAuth:
    # There are two supported authentication methods:
    # 1. Use AAD-Pod-Identity, which adds an additional deployment on the cluster.
    # 2. Use Service Principal credentials to create an Active Directory Service Principal and encode
    #    with base64 using the below command and add the result to the `secretJSON` field.
    #    > az ad sp create-for-rbac --sdk-auth | base64 -w0
    type: servicePrincipal
    secretJSON: <SECRET_JSON_CREATED_USING_ABOVE_COMMAND>
  rbac:
    enabled: true

# Traefik load balancer parameters
# Pega deployments support the use of Traefik as the default load balancer; however, by default,
# Pega Platform deployments assume clients will use the load balancing tools featured in the
# Kubernetes environment of the deployment. For more information, see the readme:
# https://github.com/pegasystems/pega-helm-charts/blob/master/charts/addons/README.md
# Set traefik.enabled: true to deploy Traefik using the parameters specified below.
traefik:
  enabled: false

# When deploying on AWS EKS, set this to true to install aws-alb-ingress-controller.
aws-alb-ingress-controller:
  enabled: false

deploy_efk: &deploy_efk false

elasticsearch:
  enabled: *deploy_efk

kibana:
  enabled: *deploy_efk

fluentd-elasticsearch:
  enabled: *deploy_efk

metrics-server:
  enabled: false