name: GitHub Actions for pega helm chart

env:
  HELM_URL: https://get.helm.sh
  HELM_TGZ: helm-v3.2.4-linux-amd64.tar.gz
  YAMLLINT_VERSION: 1.15.0
  GO_VERSION: 1.13.1


on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # schedule:
  #   - cron:  '0 12 * * *'

jobs:
  run-build-job-go:
    runs-on: ubuntu-18.04
    if: always()
    steps:
      - run: |
          echo "ABC" |  grep "FAIL" -A 8 || true 
          echo ${PIPESTATUS[0]}
      - run: sudo rm /usr/local/bin/helm
      
      - name: Install Helm
        run: |
          wget -q ${{ env.HELM_URL }}/${{ env.HELM_TGZ }}
          tar xzf ${{ env.HELM_TGZ }}
          ls -l
          mv linux-amd64/helm /usr/local/bin/helm

      - run: helm version
      
      - name: Install GO
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: export  PATH=$PATH:/usr/local/go/bin

      - name: Check out repository code
        uses: actions/checkout@v2
      
      - name: Now load the helm dependencies
        run: |
          make dependencies
                
      - name: Prepare for GO helm unit tests
        if: always()
        run: |
          mkdir $GITHUB_WORKSPACE/terratest/bin
          export GOPATH=$GITHUB_WORKSPACE/terratest
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
          export PATH=$PATH:$GITHUB_WORKSPACE/terratest/bin
          cd terratest/src/test
          dep ensure
          # grep "FAIL" -A 8 - filter unnecessary logs from the final output but show failing tests
          #  ; test ${PIPESTATUS[0]} -eq 0 - check if go test was finished success. Without it pipe return exit code from last command.

      - name: run go tests on pega
        if: always()
        run: |
          export GOPATH=$GITHUB_WORKSPACE/terratest
          export PATH=$PATH:$GITHUB_WORKSPACE/terratest/bin
          cd terratest/src/test
          go test test/pega | grep "FAIL" -A 8 || true ; test ${PIPESTATUS[0]} -eq 0

      - name: run go tests on addons
        if: always()
        run: |
          export GOPATH=$GITHUB_WORKSPACE/terratest
          export PATH=$PATH:$GITHUB_WORKSPACE/terratest/bin
          cd terratest/src/test
          go test test/addons | grep "FAIL" -A 8 || true ; test ${PIPESTATUS[0]} -eq 0

      - name: run go tests on backing services
        if: always()
        run: |
          export GOPATH=$GITHUB_WORKSPACE/terratest
          export PATH=$PATH:$GITHUB_WORKSPACE/terratest/bin
          cd terratest/src/test
          go test test/backingservices | grep "FAIL" -A 8 || true ; test ${PIPESTATUS[0]} -eq 0