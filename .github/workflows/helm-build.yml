name: Helm Chart Build

env:
  HELM_URL: https://get.helm.sh
  HELM_TGZ: helm-v3.2.4-linux-amd64.tar.gz
  YAMLLINT_VERSION: 1.15.0
  TRAVIS_GO_VERSION: 1.13.1

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: 'Yaml Lint'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Yamllint'
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: charts/**/Chart.yaml charts/**/values*.yaml
          config_file: .yamllint.yml

  remark:
    name: Documentation Lint
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - run: npm install -g --save remark-cli to-vfile remark-preset-lint-recommended remark-validate-links remark-lint-no-dead-urls remark-message-control remark-preset-lint-markdown-style-guide remark-lint
      - run: remark -i .remark_ignore -f -u validate-links .

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out working repository
      uses: actions/checkout@v2
    
    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.4.0

    - uses: actions/setup-go@v2
      with:
        go-version: '1.14.0'

    - name: Install Terratest
      run: |
        cd terratest/src/test
        dep ensure

    - name: Test Pega Chart
      run: go test test/pega | grep -v command.go:158 ; test ${PIPESTATUS[0]} -eq 0

    - name: Test Addons Chart
      run: go test test/addons | grep -v command.go:158 ; test ${PIPESTATUS[0]} -eq 0

    - name: Test Backing Services Chart
      run: go test test/backingservices | grep -v command.go:158 ; test ${PIPESTATUS[0]} -eq 0

  push:
    name: Push  Release
    if: ${{ github.ref == 'refs/heads/main' && github.repository == 'pegasystems/pega-helm-charts' }}
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - run: |
          ./before_deploy.sh
          make examples